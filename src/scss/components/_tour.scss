@use "../abstracts/variables";
@use "../abstracts/mixins";

.tour {
  display: flex;
  flex-direction: column;
  align-items: center;

  @include mixins.respond-to(x-large) {
    flex-direction: row;
  }

  &__text-content {
    @include mixins.centered-flex;
    flex-direction: column;

    @include mixins.respond-to(x-large) {
      flex: 1 0 50%;
      padding: 0 100px 100px 0;
    }
  }

  &__house-details {
    display: flex;
    flex-direction: column;
    gap: 1.6rem;
    width: 100%;
    align-self: flex-start;

    @include mixins.respond-to(xlarge) {
      gap: 3.4rem;
    }
  }

  &__house-details-heading {
    font-size: 1.6rem;
    font-weight: 600;
    margin: 1.6rem 0 0 0;
  }

  &__house-details-details {
    display: grid;
    grid-gap: 2rem;
    grid-template-rows: 1fr 1fr;
    grid-template-columns: 1fr 1fr;
    padding-bottom: 1.6rem;
    border-bottom: 2px solid variables.$color-grey-1;

    @include mixins.respond-to(xlarge) {
      padding-bottom: 3.4rem;
    }
  }

  &__house-details-detail {
    @for $i from 1 through 4 {
      &:nth-child(#{$i}) {
        @if $i % 2 == 0 {
          grid-row-start: 0;
        } @else {
          grid-row-start: 1;
        }

        & > div {
          @include mixins.color-svg(variables.$color-grey-3, map-get(variables.$tour-icon-src, $i));
        }
      }
    }

    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  &__house-details-icon {
    background-size: cover;
    width: 3.2rem;
    height: 3.2rem;
  }

  &__contact {
    display: flex;
    gap: 1.6rem;

  }

  &__contact-btn {
    display: flex;
    align-items: center;
    align-self: flex-start;
    gap: variables.$size-tiny;
    padding: 1.2rem;
    animation: pulse 2s infinite;

    @include mixins.respond-to(small) {
      padding: 1.2rem 2.4rem;
    }
  }

  &__contact-btn-text {
    display: none;
    @include mixins.respond-to(small) {
      display: block;
    }
  }

  &__contact-icon {
    filter: variables.$green-primary-light-filter;
  }

  &__visuals {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column-reverse;
    padding: 6.4rem 0;

    @include mixins.respond-to(x-large) {
      flex: 1 0 50%;
      padding: 0;
      width: unset;
    }
  }

  &__video-container {
    height: 100%;
    position: relative;
    margin-bottom: -2.5rem;
    display: block;
    transition: all 0.8s;

    @include mixins.respond-to(x-large) {
      width: 90%;
      height: max-content;
      margin-bottom: -10.5rem;
    }
  }

  &__video {
    width: 80vw;
    height: 50vw;

    @include mixins.respond-to(x-large) {
      width: 100%;
      height: 41rem;
    }
  }

  &__video-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: variables.$color-grey-1 url("../assets/video-placeholder.png") no-repeat bottom;
    background-size: cover;
  }

  &__video-play {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

.furniture {
  @include mixins.centered-flex;
  flex-direction: column-reverse;

  @include mixins.respond-to(x-large) {
    flex-direction: row;
    align-items: baseline;
    gap: 1.2rem;
    z-index: map-get(variables.$z-indexes, "almostTheTop");
  }

  &__sofa {
    border-radius: 0.8rem;
    width: 30rem;
    transition: all 0.8s;

    @include mixins.respond-to(small) {
      width: 45rem;
    }
    @include mixins.respond-to(medium) {
      width: 50rem;
    }
    @include mixins.respond-to(large) {
      width: 55rem;
    }
    @include mixins.respond-to(large) {
      width: 30rem;
      height: 16.8rem;
    }
  }

  &__container {
    margin-bottom: -2.5rem;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-direction: row;
    z-index: map-get(variables.$z-indexes, "somwhereInTheMiddle");
    transition: all 0.8s;

    @include mixins.respond-to(x-large) {
      gap: 1.2rem;
      justify-content: center;
      width: auto;
    }
  }

  &__piece {
    border-radius: 0.8rem;
    width: 9.6rem;
    height: 8rem;

    @include mixins.respond-to(small) {
      width: 13.6rem;
      height: 11rem;
    }
    @include mixins.respond-to(medium) {
      width: 15.6rem;
      height: 12.5rem;
    }
    @include mixins.respond-to(large) {
      width: 17.5rem;
      height: 15rem;
    }
    @include mixins.respond-to(x-large) {
      width: 9.6rem;
      height: 8rem;
    }
  }

}